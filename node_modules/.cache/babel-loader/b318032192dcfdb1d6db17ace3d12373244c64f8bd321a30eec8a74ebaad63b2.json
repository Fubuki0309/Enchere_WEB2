{"ast":null,"code":"/*!\n * Modernizr v2.8.3\n * www.modernizr.com\n *\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in\n * the current UA and makes the results available to you in two ways:\n * as properties on a global Modernizr object, and as classes on the\n * <html> element. This information allows you to progressively enhance\n * your pages with a granular level of control over the experience.\n *\n * Modernizr has an optional (not included) conditional resource loader\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\n * To get a build that includes Modernizr.load(), as well as choosing\n * which tests to include, go to www.modernizr.com/download/\n *\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\n * Contributors   Ryan Seddon, Ben Alman\n */\n\nwindow.Modernizr = function (window, document, undefined) {\n  var version = '2.8.3',\n    Modernizr = {},\n    /*>>cssclasses*/\n    // option for enabling the HTML classes to be added\n    enableClasses = true,\n    /*>>cssclasses*/\n\n    docElement = document.documentElement,\n    /**\n     * Create our \"modernizr\" element that we do most feature tests on.\n     */\n    mod = 'modernizr',\n    modElem = document.createElement(mod),\n    mStyle = modElem.style,\n    /**\n     * Create the input element for various Web Forms feature tests.\n     */\n    inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/,\n    /*>>smile*/\n    smile = ':)',\n    /*>>smile*/\n\n    toString = {}.toString,\n    // TODO :: make the prefixes more granular\n    /*>>prefixes*/\n    // List of property values to set for css tests. See ticket #21\n    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\n    /*>>prefixes*/\n\n    /*>>domprefixes*/\n    // Following spec is to expose vendor-specific style properties as:\n    //   elem.style.WebkitBorderRadius\n    // and the following would be incorrect:\n    //   elem.style.webkitBorderRadius\n\n    // Webkit ghosts their properties in lowercase but Opera & Moz do not.\n    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n    //   erik.eae.net/archives/2008/03/10/21.48.10/\n\n    // More here: github.com/Modernizr/Modernizr/issues/issue/21\n    omPrefixes = 'Webkit Moz O ms',\n    cssomPrefixes = omPrefixes.split(' '),\n    domPrefixes = omPrefixes.toLowerCase().split(' '),\n    /*>>domprefixes*/\n\n    /*>>ns*/\n    ns = {\n      'svg': 'http://www.w3.org/2000/svg'\n    },\n    /*>>ns*/\n\n    tests = {},\n    inputs = {},\n    attrs = {},\n    classes = [],\n    slice = classes.slice,\n    featureName,\n    // used in testing loop\n\n    /*>>teststyles*/\n    // Inject element with style element and some CSS rules\n    injectElementWithStyles = function (rule, callback, nodes, testnames) {\n      var style,\n        ret,\n        node,\n        docOverflow,\n        div = document.createElement('div'),\n        // After page load injecting a fake body doesn't work so check if body exists\n        body = document.body,\n        // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\n        fakeBody = body || document.createElement('body');\n      if (parseInt(nodes, 10)) {\n        // In order not to give false positives we create a node for each test\n        // This also allows the method to scale for unspecified uses\n        while (nodes--) {\n          node = document.createElement('div');\n          node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n          div.appendChild(node);\n        }\n      }\n\n      // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\n      // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\n      // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\n      // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\n      // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\n      style = ['&#173;', '<style id=\"s', mod, '\">', rule, '</style>'].join('');\n      div.id = mod;\n      // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n      // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n      (body ? div : fakeBody).innerHTML += style;\n      fakeBody.appendChild(div);\n      if (!body) {\n        //avoid crashing IE8, if background image is used\n        fakeBody.style.background = '';\n        //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n        fakeBody.style.overflow = 'hidden';\n        docOverflow = docElement.style.overflow;\n        docElement.style.overflow = 'hidden';\n        docElement.appendChild(fakeBody);\n      }\n      ret = callback(div, rule);\n      // If this is done after page load we don't want to remove the body so check if body exists\n      if (!body) {\n        fakeBody.parentNode.removeChild(fakeBody);\n        docElement.style.overflow = docOverflow;\n      } else {\n        div.parentNode.removeChild(div);\n      }\n      return !!ret;\n    },\n    /*>>teststyles*/\n\n    /*>>mq*/\n    // adapted from matchMedia polyfill\n    // by Scott Jehl and Paul Irish\n    // gist.github.com/786768\n    testMediaQuery = function (mq) {\n      var matchMedia = window.matchMedia || window.msMatchMedia;\n      if (matchMedia) {\n        return matchMedia(mq) && matchMedia(mq).matches || false;\n      }\n      var bool;\n      injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function (node) {\n        bool = (window.getComputedStyle ? getComputedStyle(node, null) : node.currentStyle)['position'] == 'absolute';\n      });\n      return bool;\n    },\n    /*>>mq*/\n\n    /*>>hasevent*/\n    //\n    // isEventSupported determines if a given element supports the given event\n    // kangax.github.com/iseventsupported/\n    //\n    // The following results are known incorrects:\n    //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\n    //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\n    //   ...\n    isEventSupported = function () {\n      var TAGNAMES = {\n        'select': 'input',\n        'change': 'input',\n        'submit': 'form',\n        'reset': 'form',\n        'error': 'img',\n        'load': 'img',\n        'abort': 'img'\n      };\n      function isEventSupported(eventName, element) {\n        element = element || document.createElement(TAGNAMES[eventName] || 'div');\n        eventName = 'on' + eventName;\n\n        // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\n        var isSupported = (eventName in element);\n        if (!isSupported) {\n          // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\n          if (!element.setAttribute) {\n            element = document.createElement('div');\n          }\n          if (element.setAttribute && element.removeAttribute) {\n            element.setAttribute(eventName, '');\n            isSupported = is(element[eventName], 'function');\n\n            // If property was created, \"remove it\" (by setting value to `undefined`)\n            if (!is(element[eventName], 'undefined')) {\n              element[eventName] = undefined;\n            }\n            element.removeAttribute(eventName);\n          }\n        }\n        element = null;\n        return isSupported;\n      }\n      return isEventSupported;\n    }(),\n    /*>>hasevent*/\n\n    // TODO :: Add flag for hasownprop ? didn't last time\n\n    // hasOwnProperty shim by kangax needed for Safari 2.0 support\n    _hasOwnProperty = {}.hasOwnProperty,\n    hasOwnProp;\n  if (!is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined')) {\n    hasOwnProp = function (object, property) {\n      return _hasOwnProperty.call(object, property);\n    };\n  } else {\n    hasOwnProp = function (object, property) {\n      /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n      return property in object && is(object.constructor.prototype[property], 'undefined');\n    };\n  }\n\n  // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\n  // es5.github.com/#x15.3.4.5\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function bind(that) {\n      var target = this;\n      if (typeof target != \"function\") {\n        throw new TypeError();\n      }\n      var args = slice.call(arguments, 1),\n        bound = function () {\n          if (this instanceof bound) {\n            var F = function () {};\n            F.prototype = target.prototype;\n            var self = new F();\n            var result = target.apply(self, args.concat(slice.call(arguments)));\n            if (Object(result) === result) {\n              return result;\n            }\n            return self;\n          } else {\n            return target.apply(that, args.concat(slice.call(arguments)));\n          }\n        };\n      return bound;\n    };\n  }\n\n  /**\n   * setCss applies given styles to the Modernizr DOM node.\n   */\n  function setCss(str) {\n    mStyle.cssText = str;\n  }\n\n  /**\n   * setCssAll extrapolates all vendor-specific css strings.\n   */\n  function setCssAll(str1, str2) {\n    return setCss(prefixes.join(str1 + ';') + (str2 || ''));\n  }\n\n  /**\n   * is returns a boolean for if typeof obj is exactly type.\n   */\n  function is(obj, type) {\n    return typeof obj === type;\n  }\n\n  /**\n   * contains returns a boolean for if substr is found within str.\n   */\n  function contains(str, substr) {\n    return !!~('' + str).indexOf(substr);\n  }\n\n  /*>>testprop*/\n\n  // testProps is a generic CSS / DOM property test.\n\n  // In testing support for a given CSS property, it's legit to test:\n  //    `elem.style[styleName] !== undefined`\n  // If the property is supported it will return an empty string,\n  // if unsupported it will return undefined.\n\n  // We'll take advantage of this quick test and skip setting a style\n  // on our modernizr element, but instead just testing undefined vs\n  // empty string.\n\n  // Because the testing of the CSS property names (with \"-\", as\n  // opposed to the camelCase DOM properties) is non-portable and\n  // non-standard but works in WebKit and IE (but not Gecko or Opera),\n  // we explicitly reject properties with dashes so that authors\n  // developing in WebKit or IE first don't end up with\n  // browser-specific content by accident.\n\n  function testProps(props, prefixed) {\n    for (var i in props) {\n      var prop = props[i];\n      if (!contains(prop, \"-\") && mStyle[prop] !== undefined) {\n        return prefixed == 'pfx' ? prop : true;\n      }\n    }\n    return false;\n  }\n  /*>>testprop*/\n\n  // TODO :: add testDOMProps\n  /**\n   * testDOMProps is a generic DOM property test; if a browser supports\n   *   a certain property, it won't return undefined for it.\n   */\n  function testDOMProps(props, obj, elem) {\n    for (var i in props) {\n      var item = obj[props[i]];\n      if (item !== undefined) {\n        // return the property name as a string\n        if (elem === false) return props[i];\n\n        // let's bind a function\n        if (is(item, 'function')) {\n          // default to autobind unless override\n          return item.bind(elem || obj);\n        }\n\n        // return the unbound function or obj or value\n        return item;\n      }\n    }\n    return false;\n  }\n\n  /*>>testallprops*/\n  /**\n   * testPropsAll tests a list of DOM properties we want to check against.\n   *   We specify literally ALL possible (known and/or likely) properties on\n   *   the element including the non-vendor prefixed one, for forward-\n   *   compatibility.\n   */\n  function testPropsAll(prop, prefixed, elem) {\n    var ucProp = prop.charAt(0).toUpperCase() + prop.slice(1),\n      props = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n    // did they call .prefixed('boxSizing') or are we just testing a prop?\n    if (is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\n      return testProps(props, prefixed);\n\n      // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n    } else {\n      props = (prop + ' ' + domPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n      return testDOMProps(props, prefixed, elem);\n    }\n  }\n  /*>>testallprops*/\n\n  /**\n   * Tests\n   * -----\n   */\n\n  // The *new* flexbox\n  // dev.w3.org/csswg/css3-flexbox\n\n  tests['flexbox'] = function () {\n    return testPropsAll('flexWrap');\n  };\n\n  // The *old* flexbox\n  // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\n\n  tests['flexboxlegacy'] = function () {\n    return testPropsAll('boxDirection');\n  };\n\n  // On the S60 and BB Storm, getContext exists, but always returns undefined\n  // so we actually have to call getContext() to verify\n  // github.com/Modernizr/Modernizr/issues/issue/97/\n\n  tests['canvas'] = function () {\n    var elem = document.createElement('canvas');\n    return !!(elem.getContext && elem.getContext('2d'));\n  };\n  tests['canvastext'] = function () {\n    return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\n  };\n\n  // webk.it/70117 is tracking a legit WebGL feature detect proposal\n\n  // We do a soft detect which may false positive in order to avoid\n  // an expensive context creation: bugzil.la/732441\n\n  tests['webgl'] = function () {\n    return !!window.WebGLRenderingContext;\n  };\n\n  /*\n   * The Modernizr.touch test only indicates if the browser supports\n   *    touch events, which does not necessarily reflect a touchscreen\n   *    device, as evidenced by tablets running Windows 7 or, alas,\n   *    the Palm Pre / WebOS (touch) phones.\n   *\n   * Additionally, Chrome (desktop) used to lie about its support on this,\n   *    but that has since been rectified: crbug.com/36415\n   *\n   * We also test for Firefox 4 Multitouch Support.\n   *\n   * For more info, see: modernizr.github.com/Modernizr/touch.html\n   */\n\n  tests['touch'] = function () {\n    var bool;\n    if ('ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch) {\n      bool = true;\n    } else {\n      injectElementWithStyles(['@media (', prefixes.join('touch-enabled),('), mod, ')', '{#modernizr{top:9px;position:absolute}}'].join(''), function (node) {\n        bool = node.offsetTop === 9;\n      });\n    }\n    return bool;\n  };\n\n  // geolocation is often considered a trivial feature detect...\n  // Turns out, it's quite tricky to get right:\n  //\n  // Using !!navigator.geolocation does two things we don't want. It:\n  //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\n  //   2. Disables page caching in WebKit: webk.it/43956\n  //\n  // Meanwhile, in Firefox < 8, an about:config setting could expose\n  // a false positive that would throw an exception: bugzil.la/688158\n\n  tests['geolocation'] = function () {\n    return 'geolocation' in navigator;\n  };\n  tests['postmessage'] = function () {\n    return !!window.postMessage;\n  };\n\n  // Chrome incognito mode used to throw an exception when using openDatabase\n  // It doesn't anymore.\n  tests['websqldatabase'] = function () {\n    return !!window.openDatabase;\n  };\n\n  // Vendors had inconsistent prefixing with the experimental Indexed DB:\n  // - Webkit's implementation is accessible through webkitIndexedDB\n  // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\n  // For speed, we don't test the legacy (and beta-only) indexedDB\n  tests['indexedDB'] = function () {\n    return !!testPropsAll(\"indexedDB\", window);\n  };\n\n  // documentMode logic from YUI to filter out IE8 Compat Mode\n  //   which false positives.\n  tests['hashchange'] = function () {\n    return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\n  };\n\n  // Per 1.6:\n  // This used to be Modernizr.historymanagement but the longer\n  // name has been deprecated in favor of a shorter and property-matching one.\n  // The old API is still available in 1.6, but as of 2.0 will throw a warning,\n  // and in the first release thereafter disappear entirely.\n  tests['history'] = function () {\n    return !!(window.history && history.pushState);\n  };\n  tests['draganddrop'] = function () {\n    var div = document.createElement('div');\n    return 'draggable' in div || 'ondragstart' in div && 'ondrop' in div;\n  };\n\n  // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\n  // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\n  // FF10 still uses prefixes, so check for it until then.\n  // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\n  tests['websockets'] = function () {\n    return 'WebSocket' in window || 'MozWebSocket' in window;\n  };\n\n  // css-tricks.com/rgba-browser-support/\n  tests['rgba'] = function () {\n    // Set an rgba() color and check the returned value\n\n    setCss('background-color:rgba(150,255,150,.5)');\n    return contains(mStyle.backgroundColor, 'rgba');\n  };\n  tests['hsla'] = function () {\n    // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\n    //   except IE9 who retains it as hsla\n\n    setCss('background-color:hsla(120,40%,100%,.5)');\n    return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\n  };\n  tests['multiplebgs'] = function () {\n    // Setting multiple images AND a color on the background shorthand property\n    //  and then querying the style.background property value for the number of\n    //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\n\n    setCss('background:url(https://),url(https://),red url(https://)');\n\n    // If the UA supports multiple backgrounds, there should be three occurrences\n    //   of the string \"url(\" in the return value for elemStyle.background\n\n    return /(url\\s*\\(.*?){3}/.test(mStyle.background);\n  };\n\n  // this will false positive in Opera Mini\n  //   github.com/Modernizr/Modernizr/issues/396\n\n  tests['backgroundsize'] = function () {\n    return testPropsAll('backgroundSize');\n  };\n  tests['borderimage'] = function () {\n    return testPropsAll('borderImage');\n  };\n\n  // Super comprehensive table about all the unique implementations of\n  // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\n\n  tests['borderradius'] = function () {\n    return testPropsAll('borderRadius');\n  };\n\n  // WebOS unfortunately false positives on this test.\n  tests['boxshadow'] = function () {\n    return testPropsAll('boxShadow');\n  };\n\n  // FF3.0 will false positive on this test\n  tests['textshadow'] = function () {\n    return document.createElement('div').style.textShadow === '';\n  };\n  tests['opacity'] = function () {\n    // Browsers that actually have CSS Opacity implemented have done so\n    //  according to spec, which means their return values are within the\n    //  range of [0.0,1.0] - including the leading zero.\n\n    setCssAll('opacity:.55');\n\n    // The non-literal . in this regex is intentional:\n    //   German Chrome returns this value as 0,55\n    // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\n    return /^0.55$/.test(mStyle.opacity);\n  };\n\n  // Note, Android < 4 will pass this test, but can only animate\n  //   a single property at a time\n  //   goo.gl/v3V4Gp\n  tests['cssanimations'] = function () {\n    return testPropsAll('animationName');\n  };\n  tests['csscolumns'] = function () {\n    return testPropsAll('columnCount');\n  };\n  tests['cssgradients'] = function () {\n    /**\n     * For CSS Megas syntax, please see:\n     * webkit.org/blog/175/introducing-css-gradients/\n     * developer.mozilla.org/en/CSS/-moz-linear-gradient\n     * developer.mozilla.org/en/CSS/-moz-radial-gradient\n     * dev.w3.org/csswg/css3-images/#gradients-\n     */\n\n    var str1 = 'background-image:',\n      str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\n      str3 = 'linear-gradient(left top,#9f9, white);';\n    setCss(\n    // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\n    (str1 + '-webkit- '.split(' ').join(str2 + str1) +\n    // standard syntax             // trailing 'background-image:'\n    prefixes.join(str3 + str1)).slice(0, -str1.length));\n    return contains(mStyle.backgroundImage, 'gradient');\n  };\n  tests['cssreflections'] = function () {\n    return testPropsAll('boxReflect');\n  };\n  tests['csstransforms'] = function () {\n    return !!testPropsAll('transform');\n  };\n  tests['csstransforms3d'] = function () {\n    var ret = !!testPropsAll('perspective');\n\n    // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\n    //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\n    //   some conditions. As a result, Webkit typically recognizes the syntax but\n    //   will sometimes throw a false positive, thus we must do a more thorough check:\n    if (ret && 'webkitPerspective' in docElement.style) {\n      // Webkit allows this media query to succeed only if the feature is enabled.\n      // `@media (transform-3d),(-webkit-transform-3d){ ... }`\n      injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function (node, rule) {\n        ret = node.offsetLeft === 9 && node.offsetHeight === 3;\n      });\n    }\n    return ret;\n  };\n  tests['csstransitions'] = function () {\n    return testPropsAll('transition');\n  };\n\n  /*>>fontface*/\n  // @font-face detection routine by Diego Perini\n  // javascript.nwbox.com/CSSSupport/\n\n  // false positives:\n  //   WebOS github.com/Modernizr/Modernizr/issues/342\n  //   WP7   github.com/Modernizr/Modernizr/issues/538\n  tests['fontface'] = function () {\n    var bool;\n    injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function (node, rule) {\n      var style = document.getElementById('smodernizr'),\n        sheet = style.sheet || style.styleSheet,\n        cssText = sheet ? sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '' : '';\n      bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\n    });\n    return bool;\n  };\n  /*>>fontface*/\n\n  // CSS generated content detection\n  tests['generatedcontent'] = function () {\n    var bool;\n    injectElementWithStyles(['#', mod, '{font:0/0 a}#', mod, ':after{content:\"', smile, '\";visibility:hidden;font:3px/1 a}'].join(''), function (node) {\n      bool = node.offsetHeight >= 3;\n    });\n    return bool;\n  };\n\n  // These tests evaluate support of the video/audio elements, as well as\n  // testing what types of content they support.\n  //\n  // We're using the Boolean constructor here, so that we can extend the value\n  // e.g.  Modernizr.video     // true\n  //       Modernizr.video.ogg // 'probably'\n  //\n  // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n  //                     thx to NielsLeenheer and zcorpan\n\n  // Note: in some older browsers, \"no\" was a return value instead of empty string.\n  //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n  //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n\n  tests['video'] = function () {\n    var elem = document.createElement('video'),\n      bool = false;\n\n    // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\n    try {\n      if (bool = !!elem.canPlayType) {\n        bool = new Boolean(bool);\n        bool.ogg = elem.canPlayType('video/ogg; codecs=\"theora\"').replace(/^no$/, '');\n\n        // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\n        bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"').replace(/^no$/, '');\n        bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/, '');\n      }\n    } catch (e) {}\n    return bool;\n  };\n  tests['audio'] = function () {\n    var elem = document.createElement('audio'),\n      bool = false;\n    try {\n      if (bool = !!elem.canPlayType) {\n        bool = new Boolean(bool);\n        bool.ogg = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, '');\n        bool.mp3 = elem.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n        // Mimetypes accepted:\n        //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n        //   bit.ly/iphoneoscodecs\n        bool.wav = elem.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/, '');\n        bool.m4a = (elem.canPlayType('audio/x-m4a;') || elem.canPlayType('audio/aac;')).replace(/^no$/, '');\n      }\n    } catch (e) {}\n    return bool;\n  };\n\n  // In FF4, if disabled, window.localStorage should === null.\n\n  // Normally, we could not test that directly and need to do a\n  //   `('localStorage' in window) && ` test first because otherwise Firefox will\n  //   throw bugzil.la/365772 if cookies are disabled\n\n  // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\n  // will throw the exception:\n  //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n  // Peculiarly, getItem and removeItem calls do not throw.\n\n  // Because we are forced to try/catch this, we'll go aggressive.\n\n  // Just FWIW: IE8 Compat mode supports these features completely:\n  //   www.quirksmode.org/dom/html5.html\n  // But IE8 doesn't support either with local files\n\n  tests['localstorage'] = function () {\n    try {\n      localStorage.setItem(mod, mod);\n      localStorage.removeItem(mod);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n  tests['sessionstorage'] = function () {\n    try {\n      sessionStorage.setItem(mod, mod);\n      sessionStorage.removeItem(mod);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  };\n  tests['webworkers'] = function () {\n    return !!window.Worker;\n  };\n  tests['applicationcache'] = function () {\n    return !!window.applicationCache;\n  };\n\n  // Thanks to Erik Dahlstrom\n  tests['svg'] = function () {\n    return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\n  };\n\n  // specifically for SVG inline in HTML, not within XHTML\n  // test page: paulirish.com/demo/inline-svg\n  tests['inlinesvg'] = function () {\n    var div = document.createElement('div');\n    div.innerHTML = '<svg/>';\n    return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\n  };\n\n  // SVG SMIL animation\n  tests['smil'] = function () {\n    return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\n  };\n\n  // This test is only for clip paths in SVG proper, not clip paths on HTML content\n  // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\n\n  // However read the comments to dig into applying SVG clippaths to HTML content here:\n  //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\n  tests['svgclippaths'] = function () {\n    return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\n  };\n\n  /*>>webforms*/\n  // input features and input types go directly onto the ret object, bypassing the tests loop.\n  // Hold this guy to execute in a moment.\n  function webforms() {\n    /*>>input*/\n    // Run through HTML5's new input attributes to see if the UA understands any.\n    // We're using f which is the <input> element created early on\n    // Mike Taylr has created a comprehensive resource for testing these attributes\n    //   when applied to all input types:\n    //   miketaylr.com/code/input-type-attr.html\n    // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\n    // Only input placeholder is tested while textarea's placeholder is not.\n    // Currently Safari 4 and Opera 11 have support only for the input placeholder\n    // Both tests are available in feature-detects/forms-placeholder.js\n    Modernizr['input'] = function (props) {\n      for (var i = 0, len = props.length; i < len; i++) {\n        attrs[props[i]] = !!(props[i] in inputElem);\n      }\n      if (attrs.list) {\n        // safari false positive's on datalist: webk.it/74252\n        // see also github.com/Modernizr/Modernizr/issues/146\n        attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\n      }\n      return attrs;\n    }('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\n    /*>>input*/\n\n    /*>>inputtypes*/\n    // Run through HTML5's new input types to see if the UA understands any.\n    //   This is put behind the tests runloop because it doesn't return a\n    //   true/false like all the other tests; instead, it returns an object\n    //   containing each input type with its corresponding true/false value\n\n    // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\n    Modernizr['inputtypes'] = function (props) {\n      for (var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++) {\n        inputElem.setAttribute('type', inputElemType = props[i]);\n        bool = inputElem.type !== 'text';\n\n        // We first check to see if the type we give it sticks..\n        // If the type does, we feed it a textual value, which shouldn't be valid.\n        // If the value doesn't stick, we know there's input sanitization which infers a custom UI\n        if (bool) {\n          inputElem.value = smile;\n          inputElem.style.cssText = 'position:absolute;visibility:hidden;';\n          if (/^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined) {\n            docElement.appendChild(inputElem);\n            defaultView = document.defaultView;\n\n            // Safari 2-4 allows the smiley as a value, despite making a slider\n            bool = defaultView.getComputedStyle && defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\n            // Mobile android web browser has false positive, so must\n            // check the height to see if the widget is actually there.\n            inputElem.offsetHeight !== 0;\n            docElement.removeChild(inputElem);\n          } else if (/^(search|tel)$/.test(inputElemType)) {\n            // Spec doesn't define any special parsing or detectable UI\n            //   behaviors so we pass these through as true\n\n            // Interestingly, opera fails the earlier test, so it doesn't\n            //  even make it here.\n          } else if (/^(url|email)$/.test(inputElemType)) {\n            // Real url and email support comes with prebaked validation.\n            bool = inputElem.checkValidity && inputElem.checkValidity() === false;\n          } else {\n            // If the upgraded input compontent rejects the :) text, we got a winner\n            bool = inputElem.value != smile;\n          }\n        }\n        inputs[props[i]] = !!bool;\n      }\n      return inputs;\n    }('search tel url email datetime date month week time datetime-local number range color'.split(' '));\n    /*>>inputtypes*/\n  }\n  /*>>webforms*/\n\n  // End of test definitions\n  // -----------------------\n\n  // Run through all tests and detect their support in the current UA.\n  // todo: hypothetically we could be doing an array of tests and use a basic loop here.\n  for (var feature in tests) {\n    if (hasOwnProp(tests, feature)) {\n      // run the test, throw the return value into the Modernizr,\n      //   then based on that boolean, define an appropriate className\n      //   and push it into an array of classes we'll join later.\n      featureName = feature.toLowerCase();\n      Modernizr[featureName] = tests[feature]();\n      classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\n    }\n  }\n\n  /*>>webforms*/\n  // input tests need to run.\n  Modernizr.input || webforms();\n  /*>>webforms*/\n\n  /**\n   * addTest allows the user to define their own feature tests\n   * the result will be added onto the Modernizr object,\n   * as well as an appropriate className set on the html element\n   *\n   * @param feature - String naming the feature\n   * @param test - Function returning true if feature is supported, false if not\n   */\n  Modernizr.addTest = function (feature, test) {\n    if (typeof feature == 'object') {\n      for (var key in feature) {\n        if (hasOwnProp(feature, key)) {\n          Modernizr.addTest(key, feature[key]);\n        }\n      }\n    } else {\n      feature = feature.toLowerCase();\n      if (Modernizr[feature] !== undefined) {\n        // we're going to quit if you're trying to overwrite an existing test\n        // if we were to allow it, we'd do this:\n        //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n        //   docElement.className = docElement.className.replace( re, '' );\n        // but, no rly, stuff 'em.\n        return Modernizr;\n      }\n      test = typeof test == 'function' ? test() : test;\n      if (typeof enableClasses !== \"undefined\" && enableClasses) {\n        docElement.className += ' ' + (test ? '' : 'no-') + feature;\n      }\n      Modernizr[feature] = test;\n    }\n    return Modernizr; // allow chaining.\n  };\n\n  // Reset modElem.cssText to nothing to reduce memory footprint.\n  setCss('');\n  modElem = inputElem = null;\n\n  /*>>shiv*/\n  /**\n   * @preserve HTML5 Shiv prev3.7.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n   */\n  ;\n  (function (window, document) {\n    /*jshint evil:true */\n    /** version */\n    var version = '3.7.0';\n\n    /** Preset options */\n    var options = window.html5 || {};\n\n    /** Used to skip problem elements */\n    var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n    /** Not all elements can be cloned in IE **/\n    var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n    /** Detect whether the browser supports default html5 styles */\n    var supportsHtml5Styles;\n\n    /** Name of the expando, to work with multiple documents or to re-shiv one document */\n    var expando = '_html5shiv';\n\n    /** The id for the the documents expando */\n    var expanID = 0;\n\n    /** Cached data for each document */\n    var expandoData = {};\n\n    /** Detect whether the browser supports unknown elements */\n    var supportsUnknownElements;\n    (function () {\n      try {\n        var a = document.createElement('a');\n        a.innerHTML = '<xyz></xyz>';\n        //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n        supportsHtml5Styles = 'hidden' in a;\n        supportsUnknownElements = a.childNodes.length == 1 || function () {\n          // assign a false positive if unable to shiv\n          document.createElement('a');\n          var frag = document.createDocumentFragment();\n          return typeof frag.cloneNode == 'undefined' || typeof frag.createDocumentFragment == 'undefined' || typeof frag.createElement == 'undefined';\n        }();\n      } catch (e) {\n        // assign a false positive if detection fails => unable to shiv\n        supportsHtml5Styles = true;\n        supportsUnknownElements = true;\n      }\n    })();\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Creates a style sheet with the given CSS text and adds it to the document.\n     * @private\n     * @param {Document} ownerDocument The document.\n     * @param {String} cssText The CSS text.\n     * @returns {StyleSheet} The style element.\n     */\n    function addStyleSheet(ownerDocument, cssText) {\n      var p = ownerDocument.createElement('p'),\n        parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n      p.innerHTML = 'x<style>' + cssText + '</style>';\n      return parent.insertBefore(p.lastChild, parent.firstChild);\n    }\n\n    /**\n     * Returns the value of `html5.elements` as an array.\n     * @private\n     * @returns {Array} An array of shived element node names.\n     */\n    function getElements() {\n      var elements = html5.elements;\n      return typeof elements == 'string' ? elements.split(' ') : elements;\n    }\n\n    /**\n     * Returns the data associated to the given document\n     * @private\n     * @param {Document} ownerDocument The document.\n     * @returns {Object} An object of data.\n     */\n    function getExpandoData(ownerDocument) {\n      var data = expandoData[ownerDocument[expando]];\n      if (!data) {\n        data = {};\n        expanID++;\n        ownerDocument[expando] = expanID;\n        expandoData[expanID] = data;\n      }\n      return data;\n    }\n\n    /**\n     * returns a shived element for the given nodeName and document\n     * @memberOf html5\n     * @param {String} nodeName name of the element\n     * @param {Document} ownerDocument The context document.\n     * @returns {Object} The shived element.\n     */\n    function createElement(nodeName, ownerDocument, data) {\n      if (!ownerDocument) {\n        ownerDocument = document;\n      }\n      if (supportsUnknownElements) {\n        return ownerDocument.createElement(nodeName);\n      }\n      if (!data) {\n        data = getExpandoData(ownerDocument);\n      }\n      var node;\n      if (data.cache[nodeName]) {\n        node = data.cache[nodeName].cloneNode();\n      } else if (saveClones.test(nodeName)) {\n        node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n      } else {\n        node = data.createElem(nodeName);\n      }\n\n      // Avoid adding some elements to fragments in IE < 9 because\n      // * Attributes like `name` or `type` cannot be set/changed once an element\n      //   is inserted into a document/fragment\n      // * Link elements with `src` attributes that are inaccessible, as with\n      //   a 403 response, will cause the tab/window to crash\n      // * Script elements appended to fragments will execute when their `src`\n      //   or `text` property is set\n      return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n    }\n\n    /**\n     * returns a shived DocumentFragment for the given document\n     * @memberOf html5\n     * @param {Document} ownerDocument The context document.\n     * @returns {Object} The shived DocumentFragment.\n     */\n    function createDocumentFragment(ownerDocument, data) {\n      if (!ownerDocument) {\n        ownerDocument = document;\n      }\n      if (supportsUnknownElements) {\n        return ownerDocument.createDocumentFragment();\n      }\n      data = data || getExpandoData(ownerDocument);\n      var clone = data.frag.cloneNode(),\n        i = 0,\n        elems = getElements(),\n        l = elems.length;\n      for (; i < l; i++) {\n        clone.createElement(elems[i]);\n      }\n      return clone;\n    }\n\n    /**\n     * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n     * @private\n     * @param {Document|DocumentFragment} ownerDocument The document.\n     * @param {Object} data of the document.\n     */\n    function shivMethods(ownerDocument, data) {\n      if (!data.cache) {\n        data.cache = {};\n        data.createElem = ownerDocument.createElement;\n        data.createFrag = ownerDocument.createDocumentFragment;\n        data.frag = data.createFrag();\n      }\n      ownerDocument.createElement = function (nodeName) {\n        //abort shiv\n        if (!html5.shivMethods) {\n          return data.createElem(nodeName);\n        }\n        return createElement(nodeName, ownerDocument, data);\n      };\n      ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' + 'var n=f.cloneNode(),c=n.createElement;' + 'h.shivMethods&&(' +\n      // unroll the `createElement` calls\n      getElements().join().replace(/[\\w\\-]+/g, function (nodeName) {\n        data.createElem(nodeName);\n        data.frag.createElement(nodeName);\n        return 'c(\"' + nodeName + '\")';\n      }) + ');return n}')(html5, data.frag);\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * Shivs the given document.\n     * @memberOf html5\n     * @param {Document} ownerDocument The document to shiv.\n     * @returns {Document} The shived document.\n     */\n    function shivDocument(ownerDocument) {\n      if (!ownerDocument) {\n        ownerDocument = document;\n      }\n      var data = getExpandoData(ownerDocument);\n      if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n        data.hasCSS = !!addStyleSheet(ownerDocument,\n        // corrects block display not defined in IE6/7/8/9\n        'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n        // adds styling not present in IE6/7/8/9\n        'mark{background:#FF0;color:#000}' +\n        // hides non-rendered elements\n        'template{display:none}');\n      }\n      if (!supportsUnknownElements) {\n        shivMethods(ownerDocument, data);\n      }\n      return ownerDocument;\n    }\n\n    /*--------------------------------------------------------------------------*/\n\n    /**\n     * The `html5` object is exposed so that more elements can be shived and\n     * existing shiving can be detected on iframes.\n     * @type Object\n     * @example\n     *\n     * // options can be changed before the script is included\n     * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n     */\n    var html5 = {\n      /**\n       * An array or space separated string of node names of the elements to shiv.\n       * @memberOf html5\n       * @type Array|String\n       */\n      'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video',\n      /**\n       * current version of html5shiv\n       */\n      'version': version,\n      /**\n       * A flag to indicate that the HTML5 style sheet should be inserted.\n       * @memberOf html5\n       * @type Boolean\n       */\n      'shivCSS': options.shivCSS !== false,\n      /**\n       * Is equal to true if a browser supports creating unknown/HTML5 elements\n       * @memberOf html5\n       * @type boolean\n       */\n      'supportsUnknownElements': supportsUnknownElements,\n      /**\n       * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n       * methods should be overwritten.\n       * @memberOf html5\n       * @type Boolean\n       */\n      'shivMethods': options.shivMethods !== false,\n      /**\n       * A string to describe the type of `html5` object (\"default\" or \"default print\").\n       * @memberOf html5\n       * @type String\n       */\n      'type': 'default',\n      // shivs the document according to the specified `html5` object options\n      'shivDocument': shivDocument,\n      //creates a shived element\n      createElement: createElement,\n      //creates a shived documentFragment\n      createDocumentFragment: createDocumentFragment\n    };\n\n    /*--------------------------------------------------------------------------*/\n\n    // expose html5\n    window.html5 = html5;\n\n    // shiv the document\n    shivDocument(document);\n  })(this, document);\n  /*>>shiv*/\n\n  // Assign private properties to the return object with prefix\n  Modernizr._version = version;\n\n  // expose these for the plugin API. Look in the source for how to join() them against your input\n  /*>>prefixes*/\n  Modernizr._prefixes = prefixes;\n  /*>>prefixes*/\n  /*>>domprefixes*/\n  Modernizr._domPrefixes = domPrefixes;\n  Modernizr._cssomPrefixes = cssomPrefixes;\n  /*>>domprefixes*/\n\n  /*>>mq*/\n  // Modernizr.mq tests a given media query, live against the current state of the window\n  // A few important notes:\n  //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\n  //   * A max-width or orientation query will be evaluated against the current state, which may change later.\n  //   * You must specify values. Eg. If you are testing support for the min-width media query use:\n  //       Modernizr.mq('(min-width:0)')\n  // usage:\n  // Modernizr.mq('only screen and (max-width:768)')\n  Modernizr.mq = testMediaQuery;\n  /*>>mq*/\n\n  /*>>hasevent*/\n  // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\n  // Modernizr.hasEvent('gesturestart', elem)\n  Modernizr.hasEvent = isEventSupported;\n  /*>>hasevent*/\n\n  /*>>testprop*/\n  // Modernizr.testProp() investigates whether a given style property is recognized\n  // Note that the property names must be provided in the camelCase variant.\n  // Modernizr.testProp('pointerEvents')\n  Modernizr.testProp = function (prop) {\n    return testProps([prop]);\n  };\n  /*>>testprop*/\n\n  /*>>testallprops*/\n  // Modernizr.testAllProps() investigates whether a given style property,\n  //   or any of its vendor-prefixed variants, is recognized\n  // Note that the property names must be provided in the camelCase variant.\n  // Modernizr.testAllProps('boxSizing')\n  Modernizr.testAllProps = testPropsAll;\n  /*>>testallprops*/\n\n  /*>>teststyles*/\n  // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\n  // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\n  Modernizr.testStyles = injectElementWithStyles;\n  /*>>teststyles*/\n\n  /*>>prefixed*/\n  // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\n  // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\n\n  // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\n  // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\n  //\n  //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\n\n  // If you're trying to ascertain which transition end event to bind to, you might do something like...\n  //\n  //     var transEndEventNames = {\n  //       'WebkitTransition' : 'webkitTransitionEnd',\n  //       'MozTransition'    : 'transitionend',\n  //       'OTransition'      : 'oTransitionEnd',\n  //       'msTransition'     : 'MSTransitionEnd',\n  //       'transition'       : 'transitionend'\n  //     },\n  //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\n\n  Modernizr.prefixed = function (prop, obj, elem) {\n    if (!obj) {\n      return testPropsAll(prop, 'pfx');\n    } else {\n      // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\n      return testPropsAll(prop, obj, elem);\n    }\n  };\n  /*>>prefixed*/\n\n  /*>>cssclasses*/\n  // Remove \"no-js\" class from <html> element, if it exists:\n  docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') + (\n  // Add the new classes to the <html> element.\n  enableClasses ? ' js ' + classes.join(' ') : '');\n  /*>>cssclasses*/\n\n  return Modernizr;\n}(this, this.document);","map":{"version":3,"names":["window","Modernizr","document","undefined","version","enableClasses","docElement","documentElement","mod","modElem","createElement","mStyle","style","inputElem","smile","toString","prefixes","split","omPrefixes","cssomPrefixes","domPrefixes","toLowerCase","ns","tests","inputs","attrs","classes","slice","featureName","injectElementWithStyles","rule","callback","nodes","testnames","ret","node","docOverflow","div","body","fakeBody","parseInt","id","appendChild","join","innerHTML","background","overflow","parentNode","removeChild","testMediaQuery","mq","matchMedia","msMatchMedia","matches","bool","getComputedStyle","currentStyle","isEventSupported","TAGNAMES","eventName","element","isSupported","setAttribute","removeAttribute","is","_hasOwnProperty","hasOwnProperty","hasOwnProp","call","object","property","constructor","prototype","Function","bind","that","target","TypeError","args","arguments","bound","F","self","result","apply","concat","Object","setCss","str","cssText","setCssAll","str1","str2","obj","type","contains","substr","indexOf","testProps","props","prefixed","i","prop","testDOMProps","elem","item","testPropsAll","ucProp","charAt","toUpperCase","getContext","fillText","WebGLRenderingContext","DocumentTouch","offsetTop","navigator","postMessage","openDatabase","documentMode","history","pushState","backgroundColor","test","textShadow","opacity","str3","length","backgroundImage","offsetLeft","offsetHeight","getElementById","sheet","styleSheet","cssRules","canPlayType","Boolean","ogg","replace","h264","webm","e","mp3","wav","m4a","localStorage","setItem","removeItem","sessionStorage","Worker","applicationCache","createElementNS","svg","createSVGRect","firstChild","namespaceURI","webforms","len","list","HTMLDataListElement","inputElemType","defaultView","value","WebkitAppearance","checkValidity","feature","push","input","addTest","key","className","options","html5","reSkip","saveClones","supportsHtml5Styles","expando","expanID","expandoData","supportsUnknownElements","a","childNodes","frag","createDocumentFragment","cloneNode","addStyleSheet","ownerDocument","p","parent","getElementsByTagName","insertBefore","lastChild","getElements","elements","getExpandoData","data","nodeName","cache","createElem","canHaveChildren","tagUrn","clone","elems","l","shivMethods","createFrag","shivDocument","shivCSS","hasCSS","_version","_prefixes","_domPrefixes","_cssomPrefixes","hasEvent","testProp","testAllProps","testStyles"],"sources":["/home/mahery/ITU/S5/MrRojo/enchere_web/src/pages/assets/js/modernizr/modernizr.js"],"sourcesContent":["/*!\n * Modernizr v2.8.3\n * www.modernizr.com\n *\n * Copyright (c) Faruk Ates, Paul Irish, Alex Sexton\n * Available under the BSD and MIT licenses: www.modernizr.com/license/\n */\n\n/*\n * Modernizr tests which native CSS3 and HTML5 features are available in\n * the current UA and makes the results available to you in two ways:\n * as properties on a global Modernizr object, and as classes on the\n * <html> element. This information allows you to progressively enhance\n * your pages with a granular level of control over the experience.\n *\n * Modernizr has an optional (not included) conditional resource loader\n * called Modernizr.load(), based on Yepnope.js (yepnopejs.com).\n * To get a build that includes Modernizr.load(), as well as choosing\n * which tests to include, go to www.modernizr.com/download/\n *\n * Authors        Faruk Ates, Paul Irish, Alex Sexton\n * Contributors   Ryan Seddon, Ben Alman\n */\n\nwindow.Modernizr = (function( window, document, undefined ) {\n\n    var version = '2.8.3',\n\n    Modernizr = {},\n\n    /*>>cssclasses*/\n    // option for enabling the HTML classes to be added\n    enableClasses = true,\n    /*>>cssclasses*/\n\n    docElement = document.documentElement,\n\n    /**\n     * Create our \"modernizr\" element that we do most feature tests on.\n     */\n    mod = 'modernizr',\n    modElem = document.createElement(mod),\n    mStyle = modElem.style,\n\n    /**\n     * Create the input element for various Web Forms feature tests.\n     */\n    inputElem /*>>inputelem*/ = document.createElement('input') /*>>inputelem*/ ,\n\n    /*>>smile*/\n    smile = ':)',\n    /*>>smile*/\n\n    toString = {}.toString,\n\n    // TODO :: make the prefixes more granular\n    /*>>prefixes*/\n    // List of property values to set for css tests. See ticket #21\n    prefixes = ' -webkit- -moz- -o- -ms- '.split(' '),\n    /*>>prefixes*/\n\n    /*>>domprefixes*/\n    // Following spec is to expose vendor-specific style properties as:\n    //   elem.style.WebkitBorderRadius\n    // and the following would be incorrect:\n    //   elem.style.webkitBorderRadius\n\n    // Webkit ghosts their properties in lowercase but Opera & Moz do not.\n    // Microsoft uses a lowercase `ms` instead of the correct `Ms` in IE8+\n    //   erik.eae.net/archives/2008/03/10/21.48.10/\n\n    // More here: github.com/Modernizr/Modernizr/issues/issue/21\n    omPrefixes = 'Webkit Moz O ms',\n\n    cssomPrefixes = omPrefixes.split(' '),\n\n    domPrefixes = omPrefixes.toLowerCase().split(' '),\n    /*>>domprefixes*/\n\n    /*>>ns*/\n    ns = {'svg': 'http://www.w3.org/2000/svg'},\n    /*>>ns*/\n\n    tests = {},\n    inputs = {},\n    attrs = {},\n\n    classes = [],\n\n    slice = classes.slice,\n\n    featureName, // used in testing loop\n\n\n    /*>>teststyles*/\n    // Inject element with style element and some CSS rules\n    injectElementWithStyles = function( rule, callback, nodes, testnames ) {\n\n      var style, ret, node, docOverflow,\n          div = document.createElement('div'),\n          // After page load injecting a fake body doesn't work so check if body exists\n          body = document.body,\n          // IE6 and 7 won't return offsetWidth or offsetHeight unless it's in the body element, so we fake it.\n          fakeBody = body || document.createElement('body');\n\n      if ( parseInt(nodes, 10) ) {\n          // In order not to give false positives we create a node for each test\n          // This also allows the method to scale for unspecified uses\n          while ( nodes-- ) {\n              node = document.createElement('div');\n              node.id = testnames ? testnames[nodes] : mod + (nodes + 1);\n              div.appendChild(node);\n          }\n      }\n\n      // <style> elements in IE6-9 are considered 'NoScope' elements and therefore will be removed\n      // when injected with innerHTML. To get around this you need to prepend the 'NoScope' element\n      // with a 'scoped' element, in our case the soft-hyphen entity as it won't mess with our measurements.\n      // msdn.microsoft.com/en-us/library/ms533897%28VS.85%29.aspx\n      // Documents served as xml will throw if using &shy; so use xml friendly encoded version. See issue #277\n      style = ['&#173;','<style id=\"s', mod, '\">', rule, '</style>'].join('');\n      div.id = mod;\n      // IE6 will false positive on some tests due to the style element inside the test div somehow interfering offsetHeight, so insert it into body or fakebody.\n      // Opera will act all quirky when injecting elements in documentElement when page is served as xml, needs fakebody too. #270\n      (body ? div : fakeBody).innerHTML += style;\n      fakeBody.appendChild(div);\n      if ( !body ) {\n          //avoid crashing IE8, if background image is used\n          fakeBody.style.background = '';\n          //Safari 5.13/5.1.4 OSX stops loading if ::-webkit-scrollbar is used and scrollbars are visible\n          fakeBody.style.overflow = 'hidden';\n          docOverflow = docElement.style.overflow;\n          docElement.style.overflow = 'hidden';\n          docElement.appendChild(fakeBody);\n      }\n\n      ret = callback(div, rule);\n      // If this is done after page load we don't want to remove the body so check if body exists\n      if ( !body ) {\n          fakeBody.parentNode.removeChild(fakeBody);\n          docElement.style.overflow = docOverflow;\n      } else {\n          div.parentNode.removeChild(div);\n      }\n\n      return !!ret;\n\n    },\n    /*>>teststyles*/\n\n    /*>>mq*/\n    // adapted from matchMedia polyfill\n    // by Scott Jehl and Paul Irish\n    // gist.github.com/786768\n    testMediaQuery = function( mq ) {\n\n      var matchMedia = window.matchMedia || window.msMatchMedia;\n      if ( matchMedia ) {\n        return matchMedia(mq) && matchMedia(mq).matches || false;\n      }\n\n      var bool;\n\n      injectElementWithStyles('@media ' + mq + ' { #' + mod + ' { position: absolute; } }', function( node ) {\n        bool = (window.getComputedStyle ?\n                  getComputedStyle(node, null) :\n                  node.currentStyle)['position'] == 'absolute';\n      });\n\n      return bool;\n\n     },\n     /*>>mq*/\n\n\n    /*>>hasevent*/\n    //\n    // isEventSupported determines if a given element supports the given event\n    // kangax.github.com/iseventsupported/\n    //\n    // The following results are known incorrects:\n    //   Modernizr.hasEvent(\"webkitTransitionEnd\", elem) // false negative\n    //   Modernizr.hasEvent(\"textInput\") // in Webkit. github.com/Modernizr/Modernizr/issues/333\n    //   ...\n    isEventSupported = (function() {\n\n      var TAGNAMES = {\n        'select': 'input', 'change': 'input',\n        'submit': 'form', 'reset': 'form',\n        'error': 'img', 'load': 'img', 'abort': 'img'\n      };\n\n      function isEventSupported( eventName, element ) {\n\n        element = element || document.createElement(TAGNAMES[eventName] || 'div');\n        eventName = 'on' + eventName;\n\n        // When using `setAttribute`, IE skips \"unload\", WebKit skips \"unload\" and \"resize\", whereas `in` \"catches\" those\n        var isSupported = eventName in element;\n\n        if ( !isSupported ) {\n          // If it has no `setAttribute` (i.e. doesn't implement Node interface), try generic element\n          if ( !element.setAttribute ) {\n            element = document.createElement('div');\n          }\n          if ( element.setAttribute && element.removeAttribute ) {\n            element.setAttribute(eventName, '');\n            isSupported = is(element[eventName], 'function');\n\n            // If property was created, \"remove it\" (by setting value to `undefined`)\n            if ( !is(element[eventName], 'undefined') ) {\n              element[eventName] = undefined;\n            }\n            element.removeAttribute(eventName);\n          }\n        }\n\n        element = null;\n        return isSupported;\n      }\n      return isEventSupported;\n    })(),\n    /*>>hasevent*/\n\n    // TODO :: Add flag for hasownprop ? didn't last time\n\n    // hasOwnProperty shim by kangax needed for Safari 2.0 support\n    _hasOwnProperty = ({}).hasOwnProperty, hasOwnProp;\n\n    if ( !is(_hasOwnProperty, 'undefined') && !is(_hasOwnProperty.call, 'undefined') ) {\n      hasOwnProp = function (object, property) {\n        return _hasOwnProperty.call(object, property);\n      };\n    }\n    else {\n      hasOwnProp = function (object, property) { /* yes, this can give false positives/negatives, but most of the time we don't care about those */\n        return ((property in object) && is(object.constructor.prototype[property], 'undefined'));\n      };\n    }\n\n    // Adapted from ES5-shim https://github.com/kriskowal/es5-shim/blob/master/es5-shim.js\n    // es5.github.com/#x15.3.4.5\n\n    if (!Function.prototype.bind) {\n      Function.prototype.bind = function bind(that) {\n\n        var target = this;\n\n        if (typeof target != \"function\") {\n            throw new TypeError();\n        }\n\n        var args = slice.call(arguments, 1),\n            bound = function () {\n\n            if (this instanceof bound) {\n\n              var F = function(){};\n              F.prototype = target.prototype;\n              var self = new F();\n\n              var result = target.apply(\n                  self,\n                  args.concat(slice.call(arguments))\n              );\n              if (Object(result) === result) {\n                  return result;\n              }\n              return self;\n\n            } else {\n\n              return target.apply(\n                  that,\n                  args.concat(slice.call(arguments))\n              );\n\n            }\n\n        };\n\n        return bound;\n      };\n    }\n\n    /**\n     * setCss applies given styles to the Modernizr DOM node.\n     */\n    function setCss( str ) {\n        mStyle.cssText = str;\n    }\n\n    /**\n     * setCssAll extrapolates all vendor-specific css strings.\n     */\n    function setCssAll( str1, str2 ) {\n        return setCss(prefixes.join(str1 + ';') + ( str2 || '' ));\n    }\n\n    /**\n     * is returns a boolean for if typeof obj is exactly type.\n     */\n    function is( obj, type ) {\n        return typeof obj === type;\n    }\n\n    /**\n     * contains returns a boolean for if substr is found within str.\n     */\n    function contains( str, substr ) {\n        return !!~('' + str).indexOf(substr);\n    }\n\n    /*>>testprop*/\n\n    // testProps is a generic CSS / DOM property test.\n\n    // In testing support for a given CSS property, it's legit to test:\n    //    `elem.style[styleName] !== undefined`\n    // If the property is supported it will return an empty string,\n    // if unsupported it will return undefined.\n\n    // We'll take advantage of this quick test and skip setting a style\n    // on our modernizr element, but instead just testing undefined vs\n    // empty string.\n\n    // Because the testing of the CSS property names (with \"-\", as\n    // opposed to the camelCase DOM properties) is non-portable and\n    // non-standard but works in WebKit and IE (but not Gecko or Opera),\n    // we explicitly reject properties with dashes so that authors\n    // developing in WebKit or IE first don't end up with\n    // browser-specific content by accident.\n\n    function testProps( props, prefixed ) {\n        for ( var i in props ) {\n            var prop = props[i];\n            if ( !contains(prop, \"-\") && mStyle[prop] !== undefined ) {\n                return prefixed == 'pfx' ? prop : true;\n            }\n        }\n        return false;\n    }\n    /*>>testprop*/\n\n    // TODO :: add testDOMProps\n    /**\n     * testDOMProps is a generic DOM property test; if a browser supports\n     *   a certain property, it won't return undefined for it.\n     */\n    function testDOMProps( props, obj, elem ) {\n        for ( var i in props ) {\n            var item = obj[props[i]];\n            if ( item !== undefined) {\n\n                // return the property name as a string\n                if (elem === false) return props[i];\n\n                // let's bind a function\n                if (is(item, 'function')){\n                  // default to autobind unless override\n                  return item.bind(elem || obj);\n                }\n\n                // return the unbound function or obj or value\n                return item;\n            }\n        }\n        return false;\n    }\n\n    /*>>testallprops*/\n    /**\n     * testPropsAll tests a list of DOM properties we want to check against.\n     *   We specify literally ALL possible (known and/or likely) properties on\n     *   the element including the non-vendor prefixed one, for forward-\n     *   compatibility.\n     */\n    function testPropsAll( prop, prefixed, elem ) {\n\n        var ucProp  = prop.charAt(0).toUpperCase() + prop.slice(1),\n            props   = (prop + ' ' + cssomPrefixes.join(ucProp + ' ') + ucProp).split(' ');\n\n        // did they call .prefixed('boxSizing') or are we just testing a prop?\n        if(is(prefixed, \"string\") || is(prefixed, \"undefined\")) {\n          return testProps(props, prefixed);\n\n        // otherwise, they called .prefixed('requestAnimationFrame', window[, elem])\n        } else {\n          props = (prop + ' ' + (domPrefixes).join(ucProp + ' ') + ucProp).split(' ');\n          return testDOMProps(props, prefixed, elem);\n        }\n    }\n    /*>>testallprops*/\n\n\n    /**\n     * Tests\n     * -----\n     */\n\n    // The *new* flexbox\n    // dev.w3.org/csswg/css3-flexbox\n\n    tests['flexbox'] = function() {\n      return testPropsAll('flexWrap');\n    };\n\n    // The *old* flexbox\n    // www.w3.org/TR/2009/WD-css3-flexbox-20090723/\n\n    tests['flexboxlegacy'] = function() {\n        return testPropsAll('boxDirection');\n    };\n\n    // On the S60 and BB Storm, getContext exists, but always returns undefined\n    // so we actually have to call getContext() to verify\n    // github.com/Modernizr/Modernizr/issues/issue/97/\n\n    tests['canvas'] = function() {\n        var elem = document.createElement('canvas');\n        return !!(elem.getContext && elem.getContext('2d'));\n    };\n\n    tests['canvastext'] = function() {\n        return !!(Modernizr['canvas'] && is(document.createElement('canvas').getContext('2d').fillText, 'function'));\n    };\n\n    // webk.it/70117 is tracking a legit WebGL feature detect proposal\n\n    // We do a soft detect which may false positive in order to avoid\n    // an expensive context creation: bugzil.la/732441\n\n    tests['webgl'] = function() {\n        return !!window.WebGLRenderingContext;\n    };\n\n    /*\n     * The Modernizr.touch test only indicates if the browser supports\n     *    touch events, which does not necessarily reflect a touchscreen\n     *    device, as evidenced by tablets running Windows 7 or, alas,\n     *    the Palm Pre / WebOS (touch) phones.\n     *\n     * Additionally, Chrome (desktop) used to lie about its support on this,\n     *    but that has since been rectified: crbug.com/36415\n     *\n     * We also test for Firefox 4 Multitouch Support.\n     *\n     * For more info, see: modernizr.github.com/Modernizr/touch.html\n     */\n\n    tests['touch'] = function() {\n        var bool;\n\n        if(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch) {\n          bool = true;\n        } else {\n          injectElementWithStyles(['@media (',prefixes.join('touch-enabled),('),mod,')','{#modernizr{top:9px;position:absolute}}'].join(''), function( node ) {\n            bool = node.offsetTop === 9;\n          });\n        }\n\n        return bool;\n    };\n\n\n    // geolocation is often considered a trivial feature detect...\n    // Turns out, it's quite tricky to get right:\n    //\n    // Using !!navigator.geolocation does two things we don't want. It:\n    //   1. Leaks memory in IE9: github.com/Modernizr/Modernizr/issues/513\n    //   2. Disables page caching in WebKit: webk.it/43956\n    //\n    // Meanwhile, in Firefox < 8, an about:config setting could expose\n    // a false positive that would throw an exception: bugzil.la/688158\n\n    tests['geolocation'] = function() {\n        return 'geolocation' in navigator;\n    };\n\n\n    tests['postmessage'] = function() {\n      return !!window.postMessage;\n    };\n\n\n    // Chrome incognito mode used to throw an exception when using openDatabase\n    // It doesn't anymore.\n    tests['websqldatabase'] = function() {\n      return !!window.openDatabase;\n    };\n\n    // Vendors had inconsistent prefixing with the experimental Indexed DB:\n    // - Webkit's implementation is accessible through webkitIndexedDB\n    // - Firefox shipped moz_indexedDB before FF4b9, but since then has been mozIndexedDB\n    // For speed, we don't test the legacy (and beta-only) indexedDB\n    tests['indexedDB'] = function() {\n      return !!testPropsAll(\"indexedDB\", window);\n    };\n\n    // documentMode logic from YUI to filter out IE8 Compat Mode\n    //   which false positives.\n    tests['hashchange'] = function() {\n      return isEventSupported('hashchange', window) && (document.documentMode === undefined || document.documentMode > 7);\n    };\n\n    // Per 1.6:\n    // This used to be Modernizr.historymanagement but the longer\n    // name has been deprecated in favor of a shorter and property-matching one.\n    // The old API is still available in 1.6, but as of 2.0 will throw a warning,\n    // and in the first release thereafter disappear entirely.\n    tests['history'] = function() {\n      return !!(window.history && history.pushState);\n    };\n\n    tests['draganddrop'] = function() {\n        var div = document.createElement('div');\n        return ('draggable' in div) || ('ondragstart' in div && 'ondrop' in div);\n    };\n\n    // FF3.6 was EOL'ed on 4/24/12, but the ESR version of FF10\n    // will be supported until FF19 (2/12/13), at which time, ESR becomes FF17.\n    // FF10 still uses prefixes, so check for it until then.\n    // for more ESR info, see: mozilla.org/en-US/firefox/organizations/faq/\n    tests['websockets'] = function() {\n        return 'WebSocket' in window || 'MozWebSocket' in window;\n    };\n\n\n    // css-tricks.com/rgba-browser-support/\n    tests['rgba'] = function() {\n        // Set an rgba() color and check the returned value\n\n        setCss('background-color:rgba(150,255,150,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba');\n    };\n\n    tests['hsla'] = function() {\n        // Same as rgba(), in fact, browsers re-map hsla() to rgba() internally,\n        //   except IE9 who retains it as hsla\n\n        setCss('background-color:hsla(120,40%,100%,.5)');\n\n        return contains(mStyle.backgroundColor, 'rgba') || contains(mStyle.backgroundColor, 'hsla');\n    };\n\n    tests['multiplebgs'] = function() {\n        // Setting multiple images AND a color on the background shorthand property\n        //  and then querying the style.background property value for the number of\n        //  occurrences of \"url(\" is a reliable method for detecting ACTUAL support for this!\n\n        setCss('background:url(https://),url(https://),red url(https://)');\n\n        // If the UA supports multiple backgrounds, there should be three occurrences\n        //   of the string \"url(\" in the return value for elemStyle.background\n\n        return (/(url\\s*\\(.*?){3}/).test(mStyle.background);\n    };\n\n\n\n    // this will false positive in Opera Mini\n    //   github.com/Modernizr/Modernizr/issues/396\n\n    tests['backgroundsize'] = function() {\n        return testPropsAll('backgroundSize');\n    };\n\n    tests['borderimage'] = function() {\n        return testPropsAll('borderImage');\n    };\n\n\n    // Super comprehensive table about all the unique implementations of\n    // border-radius: muddledramblings.com/table-of-css3-border-radius-compliance\n\n    tests['borderradius'] = function() {\n        return testPropsAll('borderRadius');\n    };\n\n    // WebOS unfortunately false positives on this test.\n    tests['boxshadow'] = function() {\n        return testPropsAll('boxShadow');\n    };\n\n    // FF3.0 will false positive on this test\n    tests['textshadow'] = function() {\n        return document.createElement('div').style.textShadow === '';\n    };\n\n\n    tests['opacity'] = function() {\n        // Browsers that actually have CSS Opacity implemented have done so\n        //  according to spec, which means their return values are within the\n        //  range of [0.0,1.0] - including the leading zero.\n\n        setCssAll('opacity:.55');\n\n        // The non-literal . in this regex is intentional:\n        //   German Chrome returns this value as 0,55\n        // github.com/Modernizr/Modernizr/issues/#issue/59/comment/516632\n        return (/^0.55$/).test(mStyle.opacity);\n    };\n\n\n    // Note, Android < 4 will pass this test, but can only animate\n    //   a single property at a time\n    //   goo.gl/v3V4Gp\n    tests['cssanimations'] = function() {\n        return testPropsAll('animationName');\n    };\n\n\n    tests['csscolumns'] = function() {\n        return testPropsAll('columnCount');\n    };\n\n\n    tests['cssgradients'] = function() {\n        /**\n         * For CSS Megas syntax, please see:\n         * webkit.org/blog/175/introducing-css-gradients/\n         * developer.mozilla.org/en/CSS/-moz-linear-gradient\n         * developer.mozilla.org/en/CSS/-moz-radial-gradient\n         * dev.w3.org/csswg/css3-images/#gradients-\n         */\n\n        var str1 = 'background-image:',\n            str2 = 'gradient(linear,left top,right bottom,from(#9f9),to(white));',\n            str3 = 'linear-gradient(left top,#9f9, white);';\n\n        setCss(\n             // legacy webkit syntax (FIXME: remove when syntax not in use anymore)\n              (str1 + '-webkit- '.split(' ').join(str2 + str1) +\n             // standard syntax             // trailing 'background-image:'\n              prefixes.join(str3 + str1)).slice(0, -str1.length)\n        );\n\n        return contains(mStyle.backgroundImage, 'gradient');\n    };\n\n\n    tests['cssreflections'] = function() {\n        return testPropsAll('boxReflect');\n    };\n\n\n    tests['csstransforms'] = function() {\n        return !!testPropsAll('transform');\n    };\n\n\n    tests['csstransforms3d'] = function() {\n\n        var ret = !!testPropsAll('perspective');\n\n        // Webkit's 3D transforms are passed off to the browser's own graphics renderer.\n        //   It works fine in Safari on Leopard and Snow Leopard, but not in Chrome in\n        //   some conditions. As a result, Webkit typically recognizes the syntax but\n        //   will sometimes throw a false positive, thus we must do a more thorough check:\n        if ( ret && 'webkitPerspective' in docElement.style ) {\n\n          // Webkit allows this media query to succeed only if the feature is enabled.\n          // `@media (transform-3d),(-webkit-transform-3d){ ... }`\n          injectElementWithStyles('@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}', function( node, rule ) {\n            ret = node.offsetLeft === 9 && node.offsetHeight === 3;\n          });\n        }\n        return ret;\n    };\n\n\n    tests['csstransitions'] = function() {\n        return testPropsAll('transition');\n    };\n\n\n    /*>>fontface*/\n    // @font-face detection routine by Diego Perini\n    // javascript.nwbox.com/CSSSupport/\n\n    // false positives:\n    //   WebOS github.com/Modernizr/Modernizr/issues/342\n    //   WP7   github.com/Modernizr/Modernizr/issues/538\n    tests['fontface'] = function() {\n        var bool;\n\n        injectElementWithStyles('@font-face {font-family:\"font\";src:url(\"https://\")}', function( node, rule ) {\n          var style = document.getElementById('smodernizr'),\n              sheet = style.sheet || style.styleSheet,\n              cssText = sheet ? (sheet.cssRules && sheet.cssRules[0] ? sheet.cssRules[0].cssText : sheet.cssText || '') : '';\n\n          bool = /src/i.test(cssText) && cssText.indexOf(rule.split(' ')[0]) === 0;\n        });\n\n        return bool;\n    };\n    /*>>fontface*/\n\n    // CSS generated content detection\n    tests['generatedcontent'] = function() {\n        var bool;\n\n        injectElementWithStyles(['#',mod,'{font:0/0 a}#',mod,':after{content:\"',smile,'\";visibility:hidden;font:3px/1 a}'].join(''), function( node ) {\n          bool = node.offsetHeight >= 3;\n        });\n\n        return bool;\n    };\n\n\n\n    // These tests evaluate support of the video/audio elements, as well as\n    // testing what types of content they support.\n    //\n    // We're using the Boolean constructor here, so that we can extend the value\n    // e.g.  Modernizr.video     // true\n    //       Modernizr.video.ogg // 'probably'\n    //\n    // Codec values from : github.com/NielsLeenheer/html5test/blob/9106a8/index.html#L845\n    //                     thx to NielsLeenheer and zcorpan\n\n    // Note: in some older browsers, \"no\" was a return value instead of empty string.\n    //   It was live in FF3.5.0 and 3.5.1, but fixed in 3.5.2\n    //   It was also live in Safari 4.0.0 - 4.0.4, but fixed in 4.0.5\n\n    tests['video'] = function() {\n        var elem = document.createElement('video'),\n            bool = false;\n\n        // IE9 Running on Windows Server SKU can cause an exception to be thrown, bug #224\n        try {\n            if ( bool = !!elem.canPlayType ) {\n                bool      = new Boolean(bool);\n                bool.ogg  = elem.canPlayType('video/ogg; codecs=\"theora\"')      .replace(/^no$/,'');\n\n                // Without QuickTime, this value will be `undefined`. github.com/Modernizr/Modernizr/issues/546\n                bool.h264 = elem.canPlayType('video/mp4; codecs=\"avc1.42E01E\"') .replace(/^no$/,'');\n\n                bool.webm = elem.canPlayType('video/webm; codecs=\"vp8, vorbis\"').replace(/^no$/,'');\n            }\n\n        } catch(e) { }\n\n        return bool;\n    };\n\n    tests['audio'] = function() {\n        var elem = document.createElement('audio'),\n            bool = false;\n\n        try {\n            if ( bool = !!elem.canPlayType ) {\n                bool      = new Boolean(bool);\n                bool.ogg  = elem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,'');\n                bool.mp3  = elem.canPlayType('audio/mpeg;')               .replace(/^no$/,'');\n\n                // Mimetypes accepted:\n                //   developer.mozilla.org/En/Media_formats_supported_by_the_audio_and_video_elements\n                //   bit.ly/iphoneoscodecs\n                bool.wav  = elem.canPlayType('audio/wav; codecs=\"1\"')     .replace(/^no$/,'');\n                bool.m4a  = ( elem.canPlayType('audio/x-m4a;')            ||\n                              elem.canPlayType('audio/aac;'))             .replace(/^no$/,'');\n            }\n        } catch(e) { }\n\n        return bool;\n    };\n\n\n    // In FF4, if disabled, window.localStorage should === null.\n\n    // Normally, we could not test that directly and need to do a\n    //   `('localStorage' in window) && ` test first because otherwise Firefox will\n    //   throw bugzil.la/365772 if cookies are disabled\n\n    // Also in iOS5 Private Browsing mode, attempting to use localStorage.setItem\n    // will throw the exception:\n    //   QUOTA_EXCEEDED_ERRROR DOM Exception 22.\n    // Peculiarly, getItem and removeItem calls do not throw.\n\n    // Because we are forced to try/catch this, we'll go aggressive.\n\n    // Just FWIW: IE8 Compat mode supports these features completely:\n    //   www.quirksmode.org/dom/html5.html\n    // But IE8 doesn't support either with local files\n\n    tests['localstorage'] = function() {\n        try {\n            localStorage.setItem(mod, mod);\n            localStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n    tests['sessionstorage'] = function() {\n        try {\n            sessionStorage.setItem(mod, mod);\n            sessionStorage.removeItem(mod);\n            return true;\n        } catch(e) {\n            return false;\n        }\n    };\n\n\n    tests['webworkers'] = function() {\n        return !!window.Worker;\n    };\n\n\n    tests['applicationcache'] = function() {\n        return !!window.applicationCache;\n    };\n\n\n    // Thanks to Erik Dahlstrom\n    tests['svg'] = function() {\n        return !!document.createElementNS && !!document.createElementNS(ns.svg, 'svg').createSVGRect;\n    };\n\n    // specifically for SVG inline in HTML, not within XHTML\n    // test page: paulirish.com/demo/inline-svg\n    tests['inlinesvg'] = function() {\n      var div = document.createElement('div');\n      div.innerHTML = '<svg/>';\n      return (div.firstChild && div.firstChild.namespaceURI) == ns.svg;\n    };\n\n    // SVG SMIL animation\n    tests['smil'] = function() {\n        return !!document.createElementNS && /SVGAnimate/.test(toString.call(document.createElementNS(ns.svg, 'animate')));\n    };\n\n    // This test is only for clip paths in SVG proper, not clip paths on HTML content\n    // demo: srufaculty.sru.edu/david.dailey/svg/newstuff/clipPath4.svg\n\n    // However read the comments to dig into applying SVG clippaths to HTML content here:\n    //   github.com/Modernizr/Modernizr/issues/213#issuecomment-1149491\n    tests['svgclippaths'] = function() {\n        return !!document.createElementNS && /SVGClipPath/.test(toString.call(document.createElementNS(ns.svg, 'clipPath')));\n    };\n\n    /*>>webforms*/\n    // input features and input types go directly onto the ret object, bypassing the tests loop.\n    // Hold this guy to execute in a moment.\n    function webforms() {\n        /*>>input*/\n        // Run through HTML5's new input attributes to see if the UA understands any.\n        // We're using f which is the <input> element created early on\n        // Mike Taylr has created a comprehensive resource for testing these attributes\n        //   when applied to all input types:\n        //   miketaylr.com/code/input-type-attr.html\n        // spec: www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary\n\n        // Only input placeholder is tested while textarea's placeholder is not.\n        // Currently Safari 4 and Opera 11 have support only for the input placeholder\n        // Both tests are available in feature-detects/forms-placeholder.js\n        Modernizr['input'] = (function( props ) {\n            for ( var i = 0, len = props.length; i < len; i++ ) {\n                attrs[ props[i] ] = !!(props[i] in inputElem);\n            }\n            if (attrs.list){\n              // safari false positive's on datalist: webk.it/74252\n              // see also github.com/Modernizr/Modernizr/issues/146\n              attrs.list = !!(document.createElement('datalist') && window.HTMLDataListElement);\n            }\n            return attrs;\n        })('autocomplete autofocus list placeholder max min multiple pattern required step'.split(' '));\n        /*>>input*/\n\n        /*>>inputtypes*/\n        // Run through HTML5's new input types to see if the UA understands any.\n        //   This is put behind the tests runloop because it doesn't return a\n        //   true/false like all the other tests; instead, it returns an object\n        //   containing each input type with its corresponding true/false value\n\n        // Big thanks to @miketaylr for the html5 forms expertise. miketaylr.com/\n        Modernizr['inputtypes'] = (function(props) {\n\n            for ( var i = 0, bool, inputElemType, defaultView, len = props.length; i < len; i++ ) {\n\n                inputElem.setAttribute('type', inputElemType = props[i]);\n                bool = inputElem.type !== 'text';\n\n                // We first check to see if the type we give it sticks..\n                // If the type does, we feed it a textual value, which shouldn't be valid.\n                // If the value doesn't stick, we know there's input sanitization which infers a custom UI\n                if ( bool ) {\n\n                    inputElem.value         = smile;\n                    inputElem.style.cssText = 'position:absolute;visibility:hidden;';\n\n                    if ( /^range$/.test(inputElemType) && inputElem.style.WebkitAppearance !== undefined ) {\n\n                      docElement.appendChild(inputElem);\n                      defaultView = document.defaultView;\n\n                      // Safari 2-4 allows the smiley as a value, despite making a slider\n                      bool =  defaultView.getComputedStyle &&\n                              defaultView.getComputedStyle(inputElem, null).WebkitAppearance !== 'textfield' &&\n                              // Mobile android web browser has false positive, so must\n                              // check the height to see if the widget is actually there.\n                              (inputElem.offsetHeight !== 0);\n\n                      docElement.removeChild(inputElem);\n\n                    } else if ( /^(search|tel)$/.test(inputElemType) ){\n                      // Spec doesn't define any special parsing or detectable UI\n                      //   behaviors so we pass these through as true\n\n                      // Interestingly, opera fails the earlier test, so it doesn't\n                      //  even make it here.\n\n                    } else if ( /^(url|email)$/.test(inputElemType) ) {\n                      // Real url and email support comes with prebaked validation.\n                      bool = inputElem.checkValidity && inputElem.checkValidity() === false;\n\n                    } else {\n                      // If the upgraded input compontent rejects the :) text, we got a winner\n                      bool = inputElem.value != smile;\n                    }\n                }\n\n                inputs[ props[i] ] = !!bool;\n            }\n            return inputs;\n        })('search tel url email datetime date month week time datetime-local number range color'.split(' '));\n        /*>>inputtypes*/\n    }\n    /*>>webforms*/\n\n\n    // End of test definitions\n    // -----------------------\n\n\n\n    // Run through all tests and detect their support in the current UA.\n    // todo: hypothetically we could be doing an array of tests and use a basic loop here.\n    for ( var feature in tests ) {\n        if ( hasOwnProp(tests, feature) ) {\n            // run the test, throw the return value into the Modernizr,\n            //   then based on that boolean, define an appropriate className\n            //   and push it into an array of classes we'll join later.\n            featureName  = feature.toLowerCase();\n            Modernizr[featureName] = tests[feature]();\n\n            classes.push((Modernizr[featureName] ? '' : 'no-') + featureName);\n        }\n    }\n\n    /*>>webforms*/\n    // input tests need to run.\n    Modernizr.input || webforms();\n    /*>>webforms*/\n\n\n    /**\n     * addTest allows the user to define their own feature tests\n     * the result will be added onto the Modernizr object,\n     * as well as an appropriate className set on the html element\n     *\n     * @param feature - String naming the feature\n     * @param test - Function returning true if feature is supported, false if not\n     */\n     Modernizr.addTest = function ( feature, test ) {\n       if ( typeof feature == 'object' ) {\n         for ( var key in feature ) {\n           if ( hasOwnProp( feature, key ) ) {\n             Modernizr.addTest( key, feature[ key ] );\n           }\n         }\n       } else {\n\n         feature = feature.toLowerCase();\n\n         if ( Modernizr[feature] !== undefined ) {\n           // we're going to quit if you're trying to overwrite an existing test\n           // if we were to allow it, we'd do this:\n           //   var re = new RegExp(\"\\\\b(no-)?\" + feature + \"\\\\b\");\n           //   docElement.className = docElement.className.replace( re, '' );\n           // but, no rly, stuff 'em.\n           return Modernizr;\n         }\n\n         test = typeof test == 'function' ? test() : test;\n\n         if (typeof enableClasses !== \"undefined\" && enableClasses) {\n           docElement.className += ' ' + (test ? '' : 'no-') + feature;\n         }\n         Modernizr[feature] = test;\n\n       }\n\n       return Modernizr; // allow chaining.\n     };\n\n\n    // Reset modElem.cssText to nothing to reduce memory footprint.\n    setCss('');\n    modElem = inputElem = null;\n\n    /*>>shiv*/\n    /**\n     * @preserve HTML5 Shiv prev3.7.1 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n     */\n    ;(function(window, document) {\n        /*jshint evil:true */\n        /** version */\n        var version = '3.7.0';\n\n        /** Preset options */\n        var options = window.html5 || {};\n\n        /** Used to skip problem elements */\n        var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n        /** Not all elements can be cloned in IE **/\n        var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n        /** Detect whether the browser supports default html5 styles */\n        var supportsHtml5Styles;\n\n        /** Name of the expando, to work with multiple documents or to re-shiv one document */\n        var expando = '_html5shiv';\n\n        /** The id for the the documents expando */\n        var expanID = 0;\n\n        /** Cached data for each document */\n        var expandoData = {};\n\n        /** Detect whether the browser supports unknown elements */\n        var supportsUnknownElements;\n\n        (function() {\n          try {\n            var a = document.createElement('a');\n            a.innerHTML = '<xyz></xyz>';\n            //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n            supportsHtml5Styles = ('hidden' in a);\n\n            supportsUnknownElements = a.childNodes.length == 1 || (function() {\n              // assign a false positive if unable to shiv\n              (document.createElement)('a');\n              var frag = document.createDocumentFragment();\n              return (\n                typeof frag.cloneNode == 'undefined' ||\n                typeof frag.createDocumentFragment == 'undefined' ||\n                typeof frag.createElement == 'undefined'\n              );\n            }());\n          } catch(e) {\n            // assign a false positive if detection fails => unable to shiv\n            supportsHtml5Styles = true;\n            supportsUnknownElements = true;\n          }\n\n        }());\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * Creates a style sheet with the given CSS text and adds it to the document.\n         * @private\n         * @param {Document} ownerDocument The document.\n         * @param {String} cssText The CSS text.\n         * @returns {StyleSheet} The style element.\n         */\n        function addStyleSheet(ownerDocument, cssText) {\n          var p = ownerDocument.createElement('p'),\n          parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\n\n          p.innerHTML = 'x<style>' + cssText + '</style>';\n          return parent.insertBefore(p.lastChild, parent.firstChild);\n        }\n\n        /**\n         * Returns the value of `html5.elements` as an array.\n         * @private\n         * @returns {Array} An array of shived element node names.\n         */\n        function getElements() {\n          var elements = html5.elements;\n          return typeof elements == 'string' ? elements.split(' ') : elements;\n        }\n\n        /**\n         * Returns the data associated to the given document\n         * @private\n         * @param {Document} ownerDocument The document.\n         * @returns {Object} An object of data.\n         */\n        function getExpandoData(ownerDocument) {\n          var data = expandoData[ownerDocument[expando]];\n          if (!data) {\n            data = {};\n            expanID++;\n            ownerDocument[expando] = expanID;\n            expandoData[expanID] = data;\n          }\n          return data;\n        }\n\n        /**\n         * returns a shived element for the given nodeName and document\n         * @memberOf html5\n         * @param {String} nodeName name of the element\n         * @param {Document} ownerDocument The context document.\n         * @returns {Object} The shived element.\n         */\n        function createElement(nodeName, ownerDocument, data){\n          if (!ownerDocument) {\n            ownerDocument = document;\n          }\n          if(supportsUnknownElements){\n            return ownerDocument.createElement(nodeName);\n          }\n          if (!data) {\n            data = getExpandoData(ownerDocument);\n          }\n          var node;\n\n          if (data.cache[nodeName]) {\n            node = data.cache[nodeName].cloneNode();\n          } else if (saveClones.test(nodeName)) {\n            node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n          } else {\n            node = data.createElem(nodeName);\n          }\n\n          // Avoid adding some elements to fragments in IE < 9 because\n          // * Attributes like `name` or `type` cannot be set/changed once an element\n          //   is inserted into a document/fragment\n          // * Link elements with `src` attributes that are inaccessible, as with\n          //   a 403 response, will cause the tab/window to crash\n          // * Script elements appended to fragments will execute when their `src`\n          //   or `text` property is set\n          return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\n        }\n\n        /**\n         * returns a shived DocumentFragment for the given document\n         * @memberOf html5\n         * @param {Document} ownerDocument The context document.\n         * @returns {Object} The shived DocumentFragment.\n         */\n        function createDocumentFragment(ownerDocument, data){\n          if (!ownerDocument) {\n            ownerDocument = document;\n          }\n          if(supportsUnknownElements){\n            return ownerDocument.createDocumentFragment();\n          }\n          data = data || getExpandoData(ownerDocument);\n          var clone = data.frag.cloneNode(),\n          i = 0,\n          elems = getElements(),\n          l = elems.length;\n          for(;i<l;i++){\n            clone.createElement(elems[i]);\n          }\n          return clone;\n        }\n\n        /**\n         * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n         * @private\n         * @param {Document|DocumentFragment} ownerDocument The document.\n         * @param {Object} data of the document.\n         */\n        function shivMethods(ownerDocument, data) {\n          if (!data.cache) {\n            data.cache = {};\n            data.createElem = ownerDocument.createElement;\n            data.createFrag = ownerDocument.createDocumentFragment;\n            data.frag = data.createFrag();\n          }\n\n\n          ownerDocument.createElement = function(nodeName) {\n            //abort shiv\n            if (!html5.shivMethods) {\n              return data.createElem(nodeName);\n            }\n            return createElement(nodeName, ownerDocument, data);\n          };\n\n          ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\n                                                          'var n=f.cloneNode(),c=n.createElement;' +\n                                                          'h.shivMethods&&(' +\n                                                          // unroll the `createElement` calls\n                                                          getElements().join().replace(/[\\w\\-]+/g, function(nodeName) {\n            data.createElem(nodeName);\n            data.frag.createElement(nodeName);\n            return 'c(\"' + nodeName + '\")';\n          }) +\n            ');return n}'\n                                                         )(html5, data.frag);\n        }\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * Shivs the given document.\n         * @memberOf html5\n         * @param {Document} ownerDocument The document to shiv.\n         * @returns {Document} The shived document.\n         */\n        function shivDocument(ownerDocument) {\n          if (!ownerDocument) {\n            ownerDocument = document;\n          }\n          var data = getExpandoData(ownerDocument);\n\n          if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n            data.hasCSS = !!addStyleSheet(ownerDocument,\n                                          // corrects block display not defined in IE6/7/8/9\n                                          'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\n                                            // adds styling not present in IE6/7/8/9\n                                            'mark{background:#FF0;color:#000}' +\n                                            // hides non-rendered elements\n                                            'template{display:none}'\n                                         );\n          }\n          if (!supportsUnknownElements) {\n            shivMethods(ownerDocument, data);\n          }\n          return ownerDocument;\n        }\n\n        /*--------------------------------------------------------------------------*/\n\n        /**\n         * The `html5` object is exposed so that more elements can be shived and\n         * existing shiving can be detected on iframes.\n         * @type Object\n         * @example\n         *\n         * // options can be changed before the script is included\n         * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n         */\n        var html5 = {\n\n          /**\n           * An array or space separated string of node names of the elements to shiv.\n           * @memberOf html5\n           * @type Array|String\n           */\n          'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output progress section summary template time video',\n\n          /**\n           * current version of html5shiv\n           */\n          'version': version,\n\n          /**\n           * A flag to indicate that the HTML5 style sheet should be inserted.\n           * @memberOf html5\n           * @type Boolean\n           */\n          'shivCSS': (options.shivCSS !== false),\n\n          /**\n           * Is equal to true if a browser supports creating unknown/HTML5 elements\n           * @memberOf html5\n           * @type boolean\n           */\n          'supportsUnknownElements': supportsUnknownElements,\n\n          /**\n           * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n           * methods should be overwritten.\n           * @memberOf html5\n           * @type Boolean\n           */\n          'shivMethods': (options.shivMethods !== false),\n\n          /**\n           * A string to describe the type of `html5` object (\"default\" or \"default print\").\n           * @memberOf html5\n           * @type String\n           */\n          'type': 'default',\n\n          // shivs the document according to the specified `html5` object options\n          'shivDocument': shivDocument,\n\n          //creates a shived element\n          createElement: createElement,\n\n          //creates a shived documentFragment\n          createDocumentFragment: createDocumentFragment\n        };\n\n        /*--------------------------------------------------------------------------*/\n\n        // expose html5\n        window.html5 = html5;\n\n        // shiv the document\n        shivDocument(document);\n\n    }(this, document));\n    /*>>shiv*/\n\n    // Assign private properties to the return object with prefix\n    Modernizr._version      = version;\n\n    // expose these for the plugin API. Look in the source for how to join() them against your input\n    /*>>prefixes*/\n    Modernizr._prefixes     = prefixes;\n    /*>>prefixes*/\n    /*>>domprefixes*/\n    Modernizr._domPrefixes  = domPrefixes;\n    Modernizr._cssomPrefixes  = cssomPrefixes;\n    /*>>domprefixes*/\n\n    /*>>mq*/\n    // Modernizr.mq tests a given media query, live against the current state of the window\n    // A few important notes:\n    //   * If a browser does not support media queries at all (eg. oldIE) the mq() will always return false\n    //   * A max-width or orientation query will be evaluated against the current state, which may change later.\n    //   * You must specify values. Eg. If you are testing support for the min-width media query use:\n    //       Modernizr.mq('(min-width:0)')\n    // usage:\n    // Modernizr.mq('only screen and (max-width:768)')\n    Modernizr.mq            = testMediaQuery;\n    /*>>mq*/\n\n    /*>>hasevent*/\n    // Modernizr.hasEvent() detects support for a given event, with an optional element to test on\n    // Modernizr.hasEvent('gesturestart', elem)\n    Modernizr.hasEvent      = isEventSupported;\n    /*>>hasevent*/\n\n    /*>>testprop*/\n    // Modernizr.testProp() investigates whether a given style property is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testProp('pointerEvents')\n    Modernizr.testProp      = function(prop){\n        return testProps([prop]);\n    };\n    /*>>testprop*/\n\n    /*>>testallprops*/\n    // Modernizr.testAllProps() investigates whether a given style property,\n    //   or any of its vendor-prefixed variants, is recognized\n    // Note that the property names must be provided in the camelCase variant.\n    // Modernizr.testAllProps('boxSizing')\n    Modernizr.testAllProps  = testPropsAll;\n    /*>>testallprops*/\n\n\n    /*>>teststyles*/\n    // Modernizr.testStyles() allows you to add custom styles to the document and test an element afterwards\n    // Modernizr.testStyles('#modernizr { position:absolute }', function(elem, rule){ ... })\n    Modernizr.testStyles    = injectElementWithStyles;\n    /*>>teststyles*/\n\n\n    /*>>prefixed*/\n    // Modernizr.prefixed() returns the prefixed or nonprefixed property name variant of your input\n    // Modernizr.prefixed('boxSizing') // 'MozBoxSizing'\n\n    // Properties must be passed as dom-style camelcase, rather than `box-sizing` hypentated style.\n    // Return values will also be the camelCase variant, if you need to translate that to hypenated style use:\n    //\n    //     str.replace(/([A-Z])/g, function(str,m1){ return '-' + m1.toLowerCase(); }).replace(/^ms-/,'-ms-');\n\n    // If you're trying to ascertain which transition end event to bind to, you might do something like...\n    //\n    //     var transEndEventNames = {\n    //       'WebkitTransition' : 'webkitTransitionEnd',\n    //       'MozTransition'    : 'transitionend',\n    //       'OTransition'      : 'oTransitionEnd',\n    //       'msTransition'     : 'MSTransitionEnd',\n    //       'transition'       : 'transitionend'\n    //     },\n    //     transEndEventName = transEndEventNames[ Modernizr.prefixed('transition') ];\n\n    Modernizr.prefixed      = function(prop, obj, elem){\n      if(!obj) {\n        return testPropsAll(prop, 'pfx');\n      } else {\n        // Testing DOM property e.g. Modernizr.prefixed('requestAnimationFrame', window) // 'mozRequestAnimationFrame'\n        return testPropsAll(prop, obj, elem);\n      }\n    };\n    /*>>prefixed*/\n\n\n    /*>>cssclasses*/\n    // Remove \"no-js\" class from <html> element, if it exists:\n    docElement.className = docElement.className.replace(/(^|\\s)no-js(\\s|$)/, '$1$2') +\n\n                            // Add the new classes to the <html> element.\n                            (enableClasses ? ' js ' + classes.join(' ') : '');\n    /*>>cssclasses*/\n\n    return Modernizr;\n\n})(this, this.document);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}